{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","placeholder","required","onChange","handleImgUrlError","handleImdbUrlError","useState","Math","random","toFixed","slice","id","touched","setTouched","hasError","hasImdbUrlError","hasImgUrlError","htmlFor","type","classNames","event","target","onBlur","pattern","NewMovie","onAdd","count","setCount","setTitle","setDesctiption","setImgUrl","setImdbUrl","setImdbId","trim","match","onSubmit","prevCount","newTitle","newDescription","newImgUrl","newImdbUrl","newImdbId","disabled","App","moviesFromServer","setMovies","prevMovies","newMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e38d5e53.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n  handleImgUrlError?: () => boolean,\n  handleImdbUrlError?: () => boolean,\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => {},\n  handleImgUrlError = () => false,\n  handleImdbUrlError = () => false,\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n  const [touched, setTouched] = useState(false);\n  const hasError = touched && required && !value;\n  const hasImdbUrlError = touched && handleImdbUrlError();\n  const hasImgUrlError = touched && handleImgUrlError();\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n\n      {!hasError && hasImdbUrlError && (\n        <p className=\"help is-danger\">{`${label} has error`}</p>\n      )}\n\n      {!hasError && hasImgUrlError && (\n        <p className=\"help is-danger\">{`${label} has error`}</p>\n      )}\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\n// eslint-disable-next-line max-len\nconst pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n  const [title, setTitle] = useState('');\n  const [description, setDesctiption] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n\n  const resetFields = () => {\n    setTitle('');\n    setDesctiption('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n  };\n\n  const handleImgUrlError = () => {\n    return !imgUrl.trim().match(pattern);\n  };\n\n  const handleImdbUrlError = () => {\n    return !imdbUrl.trim().match(pattern);\n  };\n\n  const addButtonDisabler = () => {\n    return !title || !imgUrl || !imdbUrl || !imdbId\n      || handleImgUrlError()\n      || handleImdbUrlError();\n  };\n\n  const handleSubmit = () => {\n    onAdd({\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    });\n\n    setCount((prevCount) => {\n      return prevCount + 1;\n    });\n\n    resetFields();\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleSubmit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={(newTitle) => setTitle(newTitle)}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        onChange={(newDescription) => setDesctiption(newDescription)}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrl}\n        onChange={(newImgUrl) => setImgUrl(newImgUrl)}\n        required\n        handleImgUrlError={() => handleImgUrlError()}\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        onChange={(newImdbUrl) => setImdbUrl(newImdbUrl)}\n        required\n        handleImdbUrlError={() => handleImdbUrlError()}\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        onChange={(newImdbId) => setImdbId(newImdbId)}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={addButtonDisabler()}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  const onAdd = (movie: Movie) => {\n    setMovies((prevMovies) => {\n      const newMovie = { ...movie };\n      const newMovies = [...prevMovies, newMovie];\n\n      return newMovies;\n    });\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={onAdd} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}